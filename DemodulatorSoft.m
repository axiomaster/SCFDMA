function y=DemodulatorSoft(in, Mode, NoiseVar)
[M,W]=size(in);
u=reshape(in,M*W,1);
%% Initialization
persistent QPSK QAM16 
if isempty(QPSK)
%% ÈíÅÐ¾ö
        QPSK = comm.PSKDemodulator(...
        'ModulationOrder', 4, ...
        'BitOutput', true, ...
        'PhaseOffset', pi/4, ...
        'SymbolMapping', 'Custom', ...
        'CustomSymbolMapping', [0 2 3 1],...
        'DecisionMethod', 'Approximate log-likelihood ratio', ...  %Approximate log-likelihood ratio
        'VarianceSource', 'Input port');  %Input port   Property
    
    QAM16 = comm.RectangularQAMDemodulator(...
        'ModulationOrder', 16,  ...
        'BitOutput', true, ...
        'NormalizationMethod', 'Average power', 'SymbolMapping', 'Custom', ...
        'CustomSymbolMapping', [11 10 14 15 9 8 12 13 1 0 4 5 3 2 6 7],...
        'DecisionMethod', 'Approximate log-likelihood ratio', ...
        'VarianceSource', 'Input port');
end
%% Processing
switch Mode
    case 1
        y=step(QPSK, u, NoiseVar);
    case 2
        y=step(QAM16,u, NoiseVar);
end       